OBJS = ast.cmo scanner.cmo parser.cmo bytecode.cmo compiler.cmo execute.cmo ezac.cmo

ezac : $(OBJS)
	ocamlc -o ezac $(OBJS)

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	ocamlyacc parser.mly

%.cmo : %.ml
	ocamlc -c $<

%.cmi : %.mli
	ocamlc -c $<

.PHONY : clean
clean :
	rm -rf *.cmo *.cmi ezac parser.mli parser.ml scanner.ml

# generated by ocamldep *.ml *.mli
ast.cmo :
ast.cmx :
bytecode.cmo : ast.cmo
bytecode.cmx : ast.cmx
compiler.cmo : ezatypes.cmo bytecode.cmo ast.cmo
compiler.cmx : ezatypes.cmx bytecode.cmx ast.cmx
execute.cmo : bytecode.cmo ast.cmo
execute.cmx : bytecode.cmx ast.cmx
ezac.cmo : scanner.cmo parser.cmi execute.cmo compiler.cmo bytecode.cmo ast.cmo
ezac.cmx : scanner.cmx parser.cmx execute.cmx compiler.cmx bytecode.cmx ast.cmx
ezatypes.cmo :
ezatypes.cmx :
interpret.cmo : scanner.cmo parser.cmi ast.cmo
interpret.cmx : scanner.cmx parser.cmx ast.cmx
parser.cmo : ast.cmo parser.cmi
parser.cmx : ast.cmx parser.cmi
scanner.cmo : parser.cmi
scanner.cmx : parser.cmx
parser.cmi : ast.cmo
